# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Client {
  address: String
  createdAt: DateTime!
  email: String!
  id: ID!
  isActive: Boolean!
  name: String!
  phone: String
  taxId: String
  updatedAt: DateTime!
}

input CreateClientInput {
  address: String
  email: String!
  isActive: Boolean = true
  name: String!
  phone: String
  taxId: String
}

input CreateInvoiceInput {
  clientId: Int!
  description: String!
  dueDate: DateTime!
  items: [InvoiceItemInput!]!
  totalPayableAmount: Float!
}

input CreatePaymentInput {
  amount: Float!
  distributionType: PaymentDistributionType!
  invoiceIds: [Int!]!
  itemDistributionType: ItemDistributionType!
  method: PaymentMethod!
}

input CreateProductInput {
  currentPrice: Float!
  description: String
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Invoice {
  client: Client!
  description: String!
  dueDate: DateTime!
  id: ID!
  items: [InvoiceItem!]!
  payments: [Payment!]!
  remainingAmount: Float!
  totalPayableAmount: Float!
}

type InvoiceItem {
  description: String!
  id: ID!
  invoice: Invoice!
  product: Product!
  quantity: Float!
  remainingAmount: Float!
  total: Float!
  unitPrice: Float!
}

input InvoiceItemInput {
  description: String!
  productId: Float!
  quantity: Float!
  total: Float!
  unitPrice: Float!
}

type InvoiceItemPaymentApplication {
  appliedAmount: Float!
  itemId: Int!
}

enum ItemDistributionType {
  IN_ORDER
  PROPORTIONAL
}

"""JSON custom scalar type"""
scalar JSON

type Mutation {
  createClient(input: CreateClientInput!): Client!
  createInvoice(input: CreateInvoiceInput!): Invoice!
  createPayment(input: CreatePaymentInput!): Payment!
  createProduct(input: CreateProductInput!): Product!
  removeClient(id: ID!): Boolean!
  removeInvoice(id: ID!): Boolean!
  removeProduct(id: ID!): Boolean!
  updateClient(id: ID!, input: CreateClientInput!): Client!
  updateInvoice(id: ID!, input: UpdateInvoiceInput!): Invoice!
  updateProduct(id: ID!, input: CreateProductInput!): Product!
}

type Payment {
  amount: Float!
  distributionType: PaymentDistributionType!
  id: ID!
  invoices: [Invoice!]!
  itemDistributionType: ItemDistributionType!
  method: PaymentMethod!
  paymentDate: DateTime!
  status: PaymentStatus!
}

enum PaymentDistributionType {
  OLDEST_FIRST
  PROPORTIONAL
}

enum PaymentMethod {
  BANK_TRANSFER
  CASH
  CREDIT_CARD
}

enum PaymentStatus {
  COMPLETED
  FAILED
  PENDING
}

type Product {
  createdAt: DateTime!
  currentPrice: Float!
  description: String
  id: ID!
  name: String!
  updatedAt: DateTime!
}

type Query {
  client(id: ID!): Client!
  clients: [Client!]!
  invoice(id: ID!): Invoice!
  invoices: [Invoice!]!
  payment(id: ID!): Payment!
  payments: [Payment!]!
  product(id: ID!): Product!
  products: [Product!]!
}

input UpdateInvoiceInput {
  description: String
  dueDate: DateTime
  items: [InvoiceItemInput!]
  totalPayableAmount: Float
}